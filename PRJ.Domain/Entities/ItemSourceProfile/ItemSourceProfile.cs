using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using PRJ.Domain.Common;
using PRJ.Domain.Entities.AmanIntegrationEntities;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using ent = PRJ.Domain.Entities;
using Index = Microsoft.EntityFrameworkCore.Metadata.Internal.Index;

namespace PRJ.Domain.Entities
{
    [Index(nameof(ItemSourceProfile.ManufacturerSerialNo), IsUnique = true)]
    public class ItemSourceProfile : AuditableBasedEntity
    {
        public ItemSourceProfile()
        {
            this.ItemSourceFiles = new HashSet<ItemSourceFiles>();
            this.ItemSourceRadionulcides = new HashSet<ItemSourceRadionulcides>();
            this.ItemSourceStatusHistories = new HashSet<ItemSourceStatusHistory>();
            this.ItemSourceMsgs = new HashSet<ItemSourceMsgHistory>();
            this.TrnItemSourceHistory = new HashSet<TrnItemSourceHistory>();
        }


        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public int SourceId { get; set; }
        public string NrrcId { get; set; }// Generated By The System
        public string ManufacturerSerialNo { get; set; }
        public string FacilitySerialNo { get; set; }
        public int? Quantity { get; set; }
        public int? ShieldNuclearMaterialCode { get; set; }
        [ForeignKey("ShieldNuclearMaterialCode")]
        public ent.NuclearMaterial.NuclearMaterial ShieldNuclearMaterial { get; set; }
        public double? InitialMass { get; set; }
        public double? SourceActivity { get; set; }
        public bool? IsShieldDU { get; set; }
        public int CurrentTrnStatus { get; set; }
        public string SourceModel { get; set; }
        public bool NoManufacturerCertificateFlag { get; set; }
        public bool NoCustomImportPermitFlag { get; set; }
        public bool NoShipperImportPermitFlag { get; set; }
        public bool NoImagesFlag { get; set; }
        public bool NoCharacterizationCertificateFlag { get; set; }
        public bool NoSourceTagImageFlag { get; set; }

        #region Navigation Properties

        public int? SourceType { get; set; }
        [ForeignKey("SourceType")]
        public virtual LookupSetTerm SourceTypeLookup { get; set; }

        public int? Status { get; set; }
        [ForeignKey("Status")]
        public virtual LookupSetTerm StatusLookup { get; set; }

        public int? PhysicalForm { get; set; }
        [ForeignKey("PhysicalForm")]
        public virtual LookupSetTerm PhysicalFormLookup { get; set; }
        public int? AssociatedEquipment { get; set; }
        [ForeignKey("AssociatedEquipment")]
        public virtual LookupSetTerm AssociatedEquipmentLookup { get; set; }
        public int? NuclearMaterial { get; set; }
        [ForeignKey("NuclearMaterial")]
        public virtual LookupSetTerm NuclearMaterialLookup { get; set; }

        public int? InitialMassUnit { get; set; }
        [ForeignKey("InitialMassUnit")]
        public virtual LookupSetTerm InitialMassLookup { get; set; }

        public int? SourceCategory { get; set; }
        [ForeignKey("SourceCategory")]
        public virtual LookupSetTerm SourceCategoryLookup { get; set; }
        public int? EntityId { get; set; }
        [ForeignKey("EntityId")]
        public virtual EntityProfile EntityProfile { get; set; }
        public int? FacilityId { get; set; }
        [ForeignKey("FacilityId")]
        public virtual FacilityProfile FacilityProfile { get; set; }
        public int? LicenseId { get; set; }
        [ForeignKey("LicenseId")]
        public virtual LicenseProfile LicenseProfile { get; set; }
        public int? LicenseInventoryId { get; set; }
        [ForeignKey("LicenseInventoryId")]
        public virtual LicenseInventoryLimits LicenseInventoryLimits { get; set; }
        public int? PermitdetailsId { get; set; }
        [ForeignKey("PermitdetailsId")]
        public virtual PermitDetailsProfile PermitDetailsProfile { get; set; }
        public int? PermitInventoryId { get; set; }
        [ForeignKey("PermitInventoryId")]
        public virtual PermitInventoryLimits PermitInventoryLimits { get; set; }
        public int? PractiseId { get; set; }
        [ForeignKey("PractiseId")]
        public virtual PractiseProfile PractiseProfile { get; set; }
        public int? SROId { get; set; }
        [ForeignKey("SROId")]
        public virtual SafetyResponsibleOfficersProfile SafetyResponsibleOfficersProfile { get; set; }
        public int? LegalRepresentativesId { get; set; }
        [ForeignKey("LegalRepresentativesId")]
        public virtual LegalRepresentativesProfile LegalRepresentativesProfile { get; set; }
        public int? ManufacturerId { get; set; }
        [ForeignKey("ManufacturerId")]
        public virtual LookupSetTerm ManufacturerLookup { get; set; }

        public int? ManufacturerCountryId { get; set; }
        [ForeignKey("ManufacturerCountryId")]
        public virtual LookupSetTerm ManufacturerCountryLookup { get; set; }

        public int TrnSourceId { get; set; }
        [ForeignKey("TrnSourceId")]
        public virtual TrnItemSource TrnItemSource { get; set; }
        public int? SourceActivityUnit { get; set; }
        [ForeignKey("SourceActivityUnit")]
        public virtual LookupSetTerm SourceActivityLookup { get; set; }

        public virtual ICollection<ItemSourceFiles> ItemSourceFiles { get; set; }
        public virtual ICollection<ItemSourceRadionulcides> ItemSourceRadionulcides { get; set; }
        public virtual ICollection<ItemSourceStatusHistory> ItemSourceStatusHistories { get; set; }
        public virtual ICollection<ItemSourceMsgHistory> ItemSourceMsgs { get; set; }

        public virtual ICollection<TrnItemSourceHistory> TrnItemSourceHistory { get; set; }

        #endregion

    }
}